##############################################################################
##                 The Calculus of Inductive Constructions                  ##
##                                                                          ##
##                                Projet Coq                                ##
##                                                                          ##
##                     INRIA                        ENS-CNRS                ##
##              Rocquencourt                        Lyon                    ##
##                                                                          ##
##                                  Coq V7                                  ##
##                                                                          ##
##                                                                          ##
##############################################################################

# WARNING
#
# This Makefile has been automagically generated by coq_makefile
# Edit at your own risks !
#
# END OF WARNING

#
# This Makefile was generated by the command line :
# coq_makefile -f Make -o Makefile 
#

##########################
#                        #
# Variables definitions. #
#                        #
##########################

CAMLP4LIB=`camlp4 -where`
COQSRC=-I $(COQTOP)/kernel -I $(COQTOP)/lib \
  -I $(COQTOP)/library -I $(COQTOP)/parsing -I $(COQTOP)/pretyping \
  -I $(COQTOP)/proofs -I $(COQTOP)/syntax -I $(COQTOP)/tactics \
  -I $(COQTOP)/toplevel -I $(COQTOP)/contrib/correctness \
  -I $(COQTOP)/contrib/extraction -I $(COQTOP)/contrib/field \
  -I $(COQTOP)/contrib/fourier -I $(COQTOP)/contrib/graphs \
  -I $(COQTOP)/contrib/interface -I $(COQTOP)/contrib/jprover \
  -I $(COQTOP)/contrib/omega -I $(COQTOP)/contrib/romega \
  -I $(COQTOP)/contrib/ring -I $(COQTOP)/contrib/xml \
  -I $(CAMLP4LIB)
ZFLAGS=$(OCAMLLIBS) $(COQSRC)
OPT=
COQFLAGS=-q $(OPT) $(COQLIBS)
COQC=$(COQBIN)coqc
GALLINA=gallina
COQWEB=coqweb
CAMLC=ocamlc -c
CAMLOPTC=ocamlopt -c
CAMLLINK=ocamlc
CAMLOPTLINK=ocamlopt
COQDEP=$(COQBIN)coqdep -c
COQVO2XML=coq_vo2xml
GRAMMARS=grammar.cma g_constr.cmo g_tactic.cmo g_ltac.cmo \
  g_basevernac.cmo tacextend.cmo vernacextend.cmo
CAMLP4EXTEND=pa_extend.cmo pa_ifdef.cmo q_MLast.cmo
PP=-pp "camlp4o -I . -I $(COQTOP)/parsing $(CAMLP4EXTEND) $(GRAMMARS) -impl"

#########################
#                       #
# Libraries definition. #
#                       #
#########################

OCAMLLIBS=-I .
COQLIBS=-I .

###################################
#                                 #
# Definition of the "all" target. #
#                                 #
###################################

VFILES=ListSet.v\
  ListFunctions.v\
  SFSstate.v\
  InitialState.v\
  sscstat.v\
  setACLdata.v\
  DACandMAC.v\
  mkdir.v\
  create.v\
  chmod.v\
  write.v\
  unlink.v\
  stat.v\
  rmdir.v\
  readdir.v\
  owner_close.v\
  oscstat.v\
  open.v\
  close.v\
  chsubsc.v\
  chown.v\
  chobjsc.v\
  addUsrGrpToAcl.v\
  aclstat.v\
  read.v\
  delUsrGrpFromAcl.v\
  TransFunc.v\
  ModelProperties.v\
  AuxiliaryLemmas.v\
  aclstatIsSecure.v\
  addUsrGrpToAclIsSecure.v\
  chmodIsSecure.v\
  chobjscIsSecure.v\
  chownIsSecure.v\
  chsubscIsSecure.v\
  closeIsSecure.v\
  createIsSecure.v\
  delUsrGrpFromAclIsSecure.v\
  mkdirIsSecure.v\
  openIsSecure.v\
  oscstatIsSecure.v\
  owner_closeIsSecure.v\
  readdirIsSecure.v\
  readIsSecure.v\
  rmdirIsSecure.v\
  sscstatIsSecure.v\
  statIsSecure.v\
  unlinkIsSecure.v\
  writeIsSecure.v\
  ModelLemmas.v
VOFILES=$(VFILES:.v=.vo)
VIFILES=$(VFILES:.v=.vi)
GFILES=$(VFILES:.v=.g)
HTMLFILES=$(VFILES:.v=.html)
GHTMLFILES=$(VFILES:.v=.g.html)

all: ListSet.vo\
  ListFunctions.vo\
  SFSstate.vo\
  InitialState.vo\
  sscstat.vo\
  setACLdata.vo\
  DACandMAC.vo\
  mkdir.vo\
  create.vo\
  chmod.vo\
  write.vo\
  unlink.vo\
  stat.vo\
  rmdir.vo\
  readdir.vo\
  owner_close.vo\
  oscstat.vo\
  open.vo\
  close.vo\
  chsubsc.vo\
  chown.vo\
  chobjsc.vo\
  addUsrGrpToAcl.vo\
  aclstat.vo\
  read.vo\
  delUsrGrpFromAcl.vo\
  TransFunc.vo\
  ModelProperties.vo\
  AuxiliaryLemmas.vo\
  aclstatIsSecure.vo\
  addUsrGrpToAclIsSecure.vo\
  chmodIsSecure.vo\
  chobjscIsSecure.vo\
  chownIsSecure.vo\
  chsubscIsSecure.vo\
  closeIsSecure.vo\
  createIsSecure.vo\
  delUsrGrpFromAclIsSecure.vo\
  mkdirIsSecure.vo\
  openIsSecure.vo\
  oscstatIsSecure.vo\
  owner_closeIsSecure.vo\
  readdirIsSecure.vo\
  readIsSecure.vo\
  rmdirIsSecure.vo\
  sscstatIsSecure.vo\
  statIsSecure.vo\
  unlinkIsSecure.vo\
  writeIsSecure.vo\
  ModelLemmas.vo

spec: $(VIFILES)

gallina: $(GFILES)

html: $(HTMLFILES)

gallinahtml: $(GHTMLFILES)

all.ps: $(VFILES)
	$(COQWEB) -ps -o $@ `$(COQDEP) -sort -suffix .v $(VFILES)`

all-gal.ps: $(GFILES)
	$(COQWEB) -ps -o $@ `$(COQDEP) -sort -suffix .g $(VFILES)`

xml:: .xml_time_stamp
.xml_time_stamp: ListSet.vo\
  ListFunctions.vo\
  SFSstate.vo\
  InitialState.vo\
  sscstat.vo\
  setACLdata.vo\
  DACandMAC.vo\
  mkdir.vo\
  create.vo\
  chmod.vo\
  write.vo\
  unlink.vo\
  stat.vo\
  rmdir.vo\
  readdir.vo\
  owner_close.vo\
  oscstat.vo\
  open.vo\
  close.vo\
  chsubsc.vo\
  chown.vo\
  chobjsc.vo\
  addUsrGrpToAcl.vo\
  aclstat.vo\
  read.vo\
  delUsrGrpFromAcl.vo\
  TransFunc.vo\
  ModelProperties.vo\
  AuxiliaryLemmas.vo\
  aclstatIsSecure.vo\
  addUsrGrpToAclIsSecure.vo\
  chmodIsSecure.vo\
  chobjscIsSecure.vo\
  chownIsSecure.vo\
  chsubscIsSecure.vo\
  closeIsSecure.vo\
  createIsSecure.vo\
  delUsrGrpFromAclIsSecure.vo\
  mkdirIsSecure.vo\
  openIsSecure.vo\
  oscstatIsSecure.vo\
  owner_closeIsSecure.vo\
  readdirIsSecure.vo\
  readIsSecure.vo\
  rmdirIsSecure.vo\
  sscstatIsSecure.vo\
  statIsSecure.vo\
  unlinkIsSecure.vo\
  writeIsSecure.vo\
  ModelLemmas.vo
	$(COQVO2XML) $(COQFLAGS) $(?:%.o=%)
	touch .xml_time_stamp

####################
#                  #
# Special targets. #
#                  #
####################

.PHONY: all opt byte archclean clean install depend xml

.SUFFIXES: .v .vo .vi .g .html .tex .g.tex .g.html

.v.vo:
	$(COQC) $(COQDEBUG) $(COQFLAGS) $*

.v.vi:
	$(COQC) -i $(COQDEBUG) $(COQFLAGS) $*

.v.g:
	$(GALLINA) $<

.v.tex:
	$(COQWEB) $< -o $@

.v.html:
	$(COQWEB) -html $< -o $@

.g.g.tex:
	$(COQWEB) $< -o $@

.g.g.html:
	$(COQWEB) -html $< -o $@

byte:
	$(MAKE) all "OPT="

opt:
	$(MAKE) all "OPT=-opt"

include .depend

depend:
	rm .depend
	$(COQDEP) -i $(COQLIBS) *.v *.ml *.mli >.depend
	$(COQDEP) $(COQLIBS) -suffix .html *.v >>.depend

xml::

install:
	mkdir -p `$(COQC) -where`/user-contrib
	cp -f *.vo `$(COQC) -where`/user-contrib

Makefile: Make
	mv -f Makefile Makefile.bak
	$(COQBIN)coq_makefile -f Make -o Makefile

clean:
	rm -f *.cmo *.cmi *.cmx *.o *.vo *.vi *.g *~
	rm -f all.ps all-gal.ps $(HTMLFILES) $(GHTMLFILES)

archclean:
	rm -f *.cmx *.o

# WARNING
#
# This Makefile has been automagically generated by coq_makefile
# Edit at your own risks !
#
# END OF WARNING

